2830,2842c2830,2883
<       child: Scrollable(
<         excludeFromSemantics: true,
<         axisDirection: _isMultiline ? AxisDirection.down : AxisDirection.right,
<         controller: _scrollController,
<         physics: widget.scrollPhysics,
<         dragStartBehavior: widget.dragStartBehavior,
<         restorationId: widget.restorationId,
<         // If a ScrollBehavior is not provided, only apply scrollbars when
<         // multiline. The overscroll indicator should not be applied in
<         // either case, glowing or stretching.
<         scrollBehavior: widget.scrollBehavior ?? ScrollConfiguration.of(context).copyWith(
<             scrollbars: _isMultiline,
<             overscroll: false,
---
>       child: CompositedTransformTarget(
>         link: _toolbarLayerLink,
>         child: Semantics(
>           onCopy: _semanticsOnCopy(controls),
>           onCut: _semanticsOnCut(controls),
>           onPaste: _semanticsOnPaste(controls),
>           child: _Editable(
>             key: _editableKey,
>             startHandleLayerLink: _startHandleLayerLink,
>             endHandleLayerLink: _endHandleLayerLink,
>             inlineSpan: buildTextSpan(),
>             value: _value,
>             cursorColor: _cursorColor,
>             backgroundCursorColor: widget.backgroundCursorColor,
>             showCursor: EditableText.debugDeterministicCursor
>                 ? ValueNotifier<bool>(widget.showCursor)
>                 : _cursorVisibilityNotifier,
>             forceLine: widget.forceLine,
>             readOnly: widget.readOnly,
>             hasFocus: _hasFocus,
>             maxLines: widget.maxLines,
>             minLines: widget.minLines,
>             expands: widget.expands,
>             strutStyle: widget.strutStyle,
>             selectionColor: widget.selectionColor,
>             textScaleFactor: widget.textScaleFactor ?? MediaQuery.textScaleFactorOf(context),
>             textAlign: widget.textAlign,
>             textDirection: _textDirection,
>             locale: widget.locale,
>             textHeightBehavior: widget.textHeightBehavior ?? DefaultTextHeightBehavior.of(context),
>             textWidthBasis: widget.textWidthBasis,
>             obscuringCharacter: widget.obscuringCharacter,
>             obscureText: widget.obscureText,
>             autocorrect: widget.autocorrect,
>             smartDashesType: widget.smartDashesType,
>             smartQuotesType: widget.smartQuotesType,
>             enableSuggestions: widget.enableSuggestions,
>             offset: ViewportOffset.zero(),
>             onCaretChanged: _handleCaretChanged,
>             rendererIgnoresPointer: widget.rendererIgnoresPointer,
>             cursorWidth: widget.cursorWidth,
>             cursorHeight: widget.cursorHeight,
>             cursorRadius: widget.cursorRadius,
>             cursorOffset: widget.cursorOffset ?? Offset.zero,
>             selectionHeightStyle: widget.selectionHeightStyle,
>             selectionWidthStyle: widget.selectionWidthStyle,
>             paintCursorAboveText: widget.paintCursorAboveText,
>             enableInteractiveSelection: widget.enableInteractiveSelection,
>             textSelectionDelegate: this,
>             devicePixelRatio: _devicePixelRatio,
>             promptRectRange: _currentPromptRectRange,
>             promptRectColor: widget.autocorrectionTextRectColor,
>             clipBehavior: widget.clipBehavior,
>           ),
2844,2901d2884
<         viewportBuilder: (BuildContext context, ViewportOffset offset) {
<           return CompositedTransformTarget(
<             link: _toolbarLayerLink,
<             child: Semantics(
<               onCopy: _semanticsOnCopy(controls),
<               onCut: _semanticsOnCut(controls),
<               onPaste: _semanticsOnPaste(controls),
<               child: _Editable(
<                 key: _editableKey,
<                 startHandleLayerLink: _startHandleLayerLink,
<                 endHandleLayerLink: _endHandleLayerLink,
<                 inlineSpan: buildTextSpan(),
<                 value: _value,
<                 cursorColor: _cursorColor,
<                 backgroundCursorColor: widget.backgroundCursorColor,
<                 showCursor: EditableText.debugDeterministicCursor
<                     ? ValueNotifier<bool>(widget.showCursor)
<                     : _cursorVisibilityNotifier,
<                 forceLine: widget.forceLine,
<                 readOnly: widget.readOnly,
<                 hasFocus: _hasFocus,
<                 maxLines: widget.maxLines,
<                 minLines: widget.minLines,
<                 expands: widget.expands,
<                 strutStyle: widget.strutStyle,
<                 selectionColor: widget.selectionColor,
<                 textScaleFactor: widget.textScaleFactor ?? MediaQuery.textScaleFactorOf(context),
<                 textAlign: widget.textAlign,
<                 textDirection: _textDirection,
<                 locale: widget.locale,
<                 textHeightBehavior: widget.textHeightBehavior ?? DefaultTextHeightBehavior.of(context),
<                 textWidthBasis: widget.textWidthBasis,
<                 obscuringCharacter: widget.obscuringCharacter,
<                 obscureText: widget.obscureText,
<                 autocorrect: widget.autocorrect,
<                 smartDashesType: widget.smartDashesType,
<                 smartQuotesType: widget.smartQuotesType,
<                 enableSuggestions: widget.enableSuggestions,
<                 offset: offset,
<                 onCaretChanged: _handleCaretChanged,
<                 rendererIgnoresPointer: widget.rendererIgnoresPointer,
<                 cursorWidth: widget.cursorWidth,
<                 cursorHeight: widget.cursorHeight,
<                 cursorRadius: widget.cursorRadius,
<                 cursorOffset: widget.cursorOffset ?? Offset.zero,
<                 selectionHeightStyle: widget.selectionHeightStyle,
<                 selectionWidthStyle: widget.selectionWidthStyle,
<                 paintCursorAboveText: widget.paintCursorAboveText,
<                 enableInteractiveSelection: widget.enableInteractiveSelection,
<                 textSelectionDelegate: this,
<                 devicePixelRatio: _devicePixelRatio,
<                 promptRectRange: _currentPromptRectRange,
<                 promptRectColor: widget.autocorrectionTextRectColor,
<                 clipBehavior: widget.clipBehavior,
<               ),
<             ),
<           );
<         },
